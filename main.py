print("\033[36m {}" .format("Крестики нолики"))

# 1. feld - Создание поля
# 2. eingag - Ввод данных, проверка условия на вход
# 3. sieg_check - Проверка на наличие совпадения в выигрышной комбинации
# 4. main - Запуск функций, вычисление, ввод изменения в список и вывод результата

zelle = list(range(1, 10))   # Цифры для заполнения ячеек в поле
gewinn = [(1, 2, 3), (4, 5, 6), (7, 8, 9), (1, 4, 7), (2, 5, 8), (3, 6, 9), (1, 5, 9), (3, 5, 7)]     # Выигрышные комбинации

def feld():  # Функция рисования поля
    print(' +-----------------+')
    for i in range(3): # Циклом по 3 каждую строку с элементом +1
        print(" | ", zelle[0 + i * 3], " | ", zelle[1 + i * 3], " | ", zelle[2 + i * 3], " |  \n +-----------------+")


# Проверка на занятость ячейки и, что вводит. Только числа от 1 до 9 по номеру ячейки

def eingab(spielergab):                     # Функция ввода и проверки
    while True:                              # Если истина т.е. Х или 0 и не занято.
        flex = input("Выберите ячейку для " + spielergab)        # Ввод
        if not (flex in "123456789"):        # Если не из этого списка (zelle), то вывести принт. Т.е. значение ложь
            print("Не корректный ввод. Введите еще раз.")
            continue                     # Если неверно вернуть цикл обратно
        flex = int(flex)                # Проверка, что введено число
        if str(zelle[flex - 1]) in "XO":    # Проверка если не занято (-1 т.к. ищем по индексу)
            print("Занято. Введите заново")
            continue                 # Если занято, опять в начало цикла
        zelle[flex - 1] = spielergab         # Если свободно, то добавляем в список
        break                            # Прервать выполнение т.к. цикл выполнен


# Проверка победы

def sieg_check():
    for j in gewinn:       # Для j в диапазоне победных комбинаций внутри списка
        if (zelle[j[0] - 1]) == (zelle[j[1] - 1]) == (zelle[j[2] - 1]):
            return zelle[j[1] - 1]
    else:
        return False        # Если нет совпадений, то продолжаем

# Общая функция для запуска ходов и функций

def main():
    flex1 = 0       # Счетчик хода
    while True:
        feld()          # Пока норм даем доску
        if flex1 % 2 == 0:      # Поочередность ходов
            eingab("X")
        else:
            eingab("O")
        if flex1 > 3:       # проверка на выигрыш после 3 хода
            winn = sieg_check()
            if winn:
                feld()
                print(winn, "\033[33m\033[1m {}" .format ("Выиграл"))
                break
        flex1 += 1
        if flex1 > 8:       # Если больше 8 ходов, то конец
            feld()
            print("\033[33m\033[1m {}" .format("Ничья"))
            break

main()
